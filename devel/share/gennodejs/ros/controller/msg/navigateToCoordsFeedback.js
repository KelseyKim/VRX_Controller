// Auto-generated. Do not edit!

// (in-package controller.msg)


"use strict";

const _serializer = _ros_msg_utils.Serialize;
const _arraySerializer = _serializer.Array;
const _deserializer = _ros_msg_utils.Deserialize;
const _arrayDeserializer = _deserializer.Array;
const _finder = _ros_msg_utils.Find;
const _getByteLength = _ros_msg_utils.getByteLength;
let std_msgs = _finder('std_msgs');
let geometry_msgs = _finder('geometry_msgs');

//-----------------------------------------------------------

class navigateToCoordsFeedback {
  constructor(initObj={}) {
    if (initObj === null) {
      // initObj === null is a special case for deserialization where we don't initialize fields
      this.distanceToGoal = null;
      this.currentCoords = null;
      this.leftThrustCmd = null;
      this.rightThrustCmd = null;
    }
    else {
      if (initObj.hasOwnProperty('distanceToGoal')) {
        this.distanceToGoal = initObj.distanceToGoal
      }
      else {
        this.distanceToGoal = new geometry_msgs.msg.Point();
      }
      if (initObj.hasOwnProperty('currentCoords')) {
        this.currentCoords = initObj.currentCoords
      }
      else {
        this.currentCoords = new geometry_msgs.msg.Point();
      }
      if (initObj.hasOwnProperty('leftThrustCmd')) {
        this.leftThrustCmd = initObj.leftThrustCmd
      }
      else {
        this.leftThrustCmd = new std_msgs.msg.Float64();
      }
      if (initObj.hasOwnProperty('rightThrustCmd')) {
        this.rightThrustCmd = initObj.rightThrustCmd
      }
      else {
        this.rightThrustCmd = new std_msgs.msg.Float64();
      }
    }
  }

  static serialize(obj, buffer, bufferOffset) {
    // Serializes a message object of type navigateToCoordsFeedback
    // Serialize message field [distanceToGoal]
    bufferOffset = geometry_msgs.msg.Point.serialize(obj.distanceToGoal, buffer, bufferOffset);
    // Serialize message field [currentCoords]
    bufferOffset = geometry_msgs.msg.Point.serialize(obj.currentCoords, buffer, bufferOffset);
    // Serialize message field [leftThrustCmd]
    bufferOffset = std_msgs.msg.Float64.serialize(obj.leftThrustCmd, buffer, bufferOffset);
    // Serialize message field [rightThrustCmd]
    bufferOffset = std_msgs.msg.Float64.serialize(obj.rightThrustCmd, buffer, bufferOffset);
    return bufferOffset;
  }

  static deserialize(buffer, bufferOffset=[0]) {
    //deserializes a message object of type navigateToCoordsFeedback
    let len;
    let data = new navigateToCoordsFeedback(null);
    // Deserialize message field [distanceToGoal]
    data.distanceToGoal = geometry_msgs.msg.Point.deserialize(buffer, bufferOffset);
    // Deserialize message field [currentCoords]
    data.currentCoords = geometry_msgs.msg.Point.deserialize(buffer, bufferOffset);
    // Deserialize message field [leftThrustCmd]
    data.leftThrustCmd = std_msgs.msg.Float64.deserialize(buffer, bufferOffset);
    // Deserialize message field [rightThrustCmd]
    data.rightThrustCmd = std_msgs.msg.Float64.deserialize(buffer, bufferOffset);
    return data;
  }

  static getMessageSize(object) {
    return 64;
  }

  static datatype() {
    // Returns string type for a message object
    return 'controller/navigateToCoordsFeedback';
  }

  static md5sum() {
    //Returns md5sum for a message object
    return '38e97591d720cad24ca08797ade7f216';
  }

  static messageDefinition() {
    // Returns full string definition for message
    return `
    # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
    # Feedback
    geometry_msgs/Point distanceToGoal
    geometry_msgs/Point currentCoords
    std_msgs/Float64 leftThrustCmd
    std_msgs/Float64 rightThrustCmd
    
    
    ================================================================================
    MSG: geometry_msgs/Point
    # This contains the position of a point in free space
    float64 x
    float64 y
    float64 z
    
    ================================================================================
    MSG: std_msgs/Float64
    float64 data
    `;
  }

  static Resolve(msg) {
    // deep-construct a valid message object instance of whatever was passed in
    if (typeof msg !== 'object' || msg === null) {
      msg = {};
    }
    const resolved = new navigateToCoordsFeedback(null);
    if (msg.distanceToGoal !== undefined) {
      resolved.distanceToGoal = geometry_msgs.msg.Point.Resolve(msg.distanceToGoal)
    }
    else {
      resolved.distanceToGoal = new geometry_msgs.msg.Point()
    }

    if (msg.currentCoords !== undefined) {
      resolved.currentCoords = geometry_msgs.msg.Point.Resolve(msg.currentCoords)
    }
    else {
      resolved.currentCoords = new geometry_msgs.msg.Point()
    }

    if (msg.leftThrustCmd !== undefined) {
      resolved.leftThrustCmd = std_msgs.msg.Float64.Resolve(msg.leftThrustCmd)
    }
    else {
      resolved.leftThrustCmd = new std_msgs.msg.Float64()
    }

    if (msg.rightThrustCmd !== undefined) {
      resolved.rightThrustCmd = std_msgs.msg.Float64.Resolve(msg.rightThrustCmd)
    }
    else {
      resolved.rightThrustCmd = new std_msgs.msg.Float64()
    }

    return resolved;
    }
};

module.exports = navigateToCoordsFeedback;
